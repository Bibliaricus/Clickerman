// Created by Slavik
// For: Home-PC
// Browser: K-Meleon, Chrome

//=============================================

// Працездатність сценарію:
// Single

// Home-PC^Chrome: у правому половинному вікні не працює оновлення, клікає по загальних координаах. Думаю це тому, що іконка рефреша знаходиться поза областю пошуку. Можливло це виправиться прив'язкою до вікна(біндінгом). Інших помилок не виявлено. Помилку із зеленим кольором potion на всіх посиланнях бойової частини не помічав і не особливо старався її викликати, оскільки виникає в не "природніх" умовах
// UPD: проблема з правою стороною вирішена з допомогю прив'язки за комбінацією клавіш. Думаю в К-Мелеоні таке не пройде, оскільки там при кожному перезавантаженні сторінки потрібно заново прив'язуватись до вікна. 

// Home-PC^K-Meleon: у правому половинному вікні не працює оновлення, клікає по загальних координатах, причина така сама, що й з Хромом; виявлено, що при інколи після випивання зілля і зміни сторони половинного вікна починає підсвічуватись всі посилання в управлінні боєм. Повторно викликати помилку не пробував.

// Work-PC^Chrome: у правому половинному вікні не працює оновлення, клікає по загальних координатах, причина така сама, що й в інших випадках. Інших проблем виявлено не було. Покищо. У правому половинному вікні, якщо на фоні є сценарій клікера з коментарями, то клікер починає нажимати на коментарі. Скоріш за все вони, одного йтого самого кольору, що й колір ЛЛ.  

// Work-PC^K-Meleon: у правому половинному вікні не працює оновлення, клікає по загальних координатах, причина така сама, що й в інших випадках. Інших проблем виявлено не було. На К-Мелеоні багу з кліком по коментарях сценарію виявлено не було.   

// Paralell

// Home-PC:CRM&CRM: 
// 50:50: працює справно, якщо прив'язатись до одного з вікна. Два вікна Хрому зроблено через розширення Multilogin. Автоматизація працює в незалежності від того, до якого вікна відбулась прив'язка. 
// UPD: Був написаний скріпт на прив'язку до лівого або правого вікна Хрому. Тому тепер при 50:50 можна прив'язуватись або командно або комбінацією клавіш. 
// 100%: можна викликати два клікермена, але гарячі клавіші працюють лише для одного з них. Тому, відповідно, не можна прив'язатись до вікна одразу обом клікерам. Тому спробую змінити скріпт так, щоб він прив'язувався до вікна сам за допомогою команди. При чому я зараз створю кілька модифікацій цього сценарію і кожному з них надам різні координати за якими потрібно шукати hWND вікна.
// Вдалось зробити два повністю автоматичні клікера. За допомою прив'язки до вікна (за координатами) командами. Суть команд: за координатами знаходиться hWND вікна і до нього прив'язується клікер і починає виконувати сценарій. Координати є для правого і лівого половинного вікна. Щоб відв'язати один клікер можна використати комбінацію клавіш, а другий за допомогою спеціального сценарію, який відв'язуює вікно від клікера. unbinding.cms та сценарії для прив'язки лівого і правого вікна будуть лежати окремо.
// Сценарії для 100%: 
// _working_permanent_healing--Chrome--100%auto--hWND_by_command(left).cms
// _working_permanent_healing--Chrome--100%auto--hWND_by_command(right).cms 

// Home-PC:CRM&KM:
// 50:50: реалізовано повністю. При чому таку прив'язку можна зробити відразу двома способами. Перший: прив'язатись до вікна хрому за допомогою гарячих клавіш, а для K-Meleon запустити сценарій з прив'язкою до відповідної сторони екрану. А можна задати і Хрому і КМ, щоб клікер сам прив'язувався до них за певними командами. Але в такому разі потрібно вибирати правильний сценарій для відповідного вікна. До речі, сцепку Хрома і КМ можна використовувати для того, щоб один із акаунтів постійно хиляв іншого, а той проходи якийсь данж у версії для смартфонів. 
// 100%: реалізовано повністю. Для того, щоб включити повну автомтизацію, потрібно просто вибрати необхідні сценарії для відповідних сторін і запустити їх у двох версіях клікеру.
// Сценарії для 100%:
// _working_permanent_healing--Chrome--100%auto--hWND_by_command(left).cms
// _working_permanent_healing--Chrome--100%auto--hWND_by_command(right).cms
// _working_permanent_healing--K-Meleon--100%auto--hWND_by_command(left).cms
// _working_permanent_healing--K-Meleon--100%auto--hWND_by_command(right).cms

// Home-PC:KM&RM: реалізовано повністю. Принцип такий самий, як і в реалізації повної автоматизації для Хрому та Кмелеона. Тільки друге вікно Кмелеону потрібно запускати в пісочниці. А також запускати два клікера і вибирати два сценарії: для лівої та правої сторони. 
// Сценарії для 100:
// _working_permanent_healing--K-Meleon--100%auto--hWND_by_command(left).cms
// _working_permanent_healing--K-Meleon--100%auto--hWND_by_command(right).cms

// Work-PC:CRM&CRM:
// 50:50: Під час тестування 50:50 під час прив'язки до правого половинного вікна (нативний Хром(без Мультилогіна)) посилання на атаку почали підсвічуватись так, як ЛЛ. В них адреса почала містити текст, за яким застосовуються стилі для ЛЛ. Спробую зараз самому викликати цю помилку.
// Несподівано (з нез'ясованих причин) під час прив'язки до будь-якого з вікон Хрому клікер перестав розрізняти колір. Сталось це відразу після багу з атакуючими посиланнями в кольорах ЛЛ. Після перезавантаження Хрому та клікера проблема не зникла. Зараз спробую перезавантажити комп і взяти новий клікер і спробувати заново.
// А потім клікер просто перестав бачити кольора під час прив'язки до Хрому. Перезавантаженням не лікується. Зараз спробую новий клікер і відключення апараного прискорення в Хромі.     
// Проблема із зміною кольору в Хромі з'являється після невдалої прив'язки, коли клікер клікає по координатах кнопки і перезавантажує сторінку.
// UPD: тільки що пробував моделювати цю ситуацію - баг не викликається. Причини його залишаються нез'ясованими.
// UPD_2: проблема з тим, що клікер не бачить кольорів при прив'язці до хрому вирішується, якщо відключити апаратне прискорення хрому.
// UPD_3: після вирішення проблеми з апаратним прискоренням, більше ніяких проблем при тестуванні 50:50 на Хромах не виникало. Все працює добре, хоча поглибленого тестування не проводилось. Воно вже буде проводитись під час використання. Все працює коректно і при ручній прив'язці і за допомогою спеціальних сценаріїв.
// 100%: проблем під час цього тестування виявлено не було. Можливо, вони з'являються під час роботи. Але тоді й будемо їх відловлювати.

// Work-PC:CRM&KM: 
// 50:50: все працює, як і задумувалось. Проблем виявлено не було. 
// 100%: все працює, як і задумувалось. Проблем виявлено не було. 

// Work-PC:KM&KM: 
// 50:50: все працює, як і задумувалось. Проблем виявлено не було. 
// 100%: все працює, як і задумувалось. Проблем виявлено не було. 

// Виявлені баги:
// [FIXED] При прив'язці К-Мелеону до вікна і ручному управліні Хрому було виявлено, що К-Мелеон не нажимає на клавішу F5. Можливо, це пов'язано з тим, що під час ручного управління, перехоплюється контроль за клавіатурою. Або ж це просто глючна хуйня. В такому разі потрібно буде спробувати перезавантажувати сторінку за допомогою клавіатурних скорочень, якщо вони доступні для К-Мелеону (так, як в Хромі). FIX: треба було просто перед процедурою нажимання на F5 поставити маленький вейт. 

//=============================================

LOGWRITE("PERMANENT ITERATION - START")

// Binding to Chrome window

LOGWRITE("Left binding")
LOGWRITE("1. Current bind hWND is: ", $_hwnd) 
$h = HGET(341,26)
LOGWRITE("hWND of left window (HGET) is: ", $h)
HSET($h,1)
LOGWRITE("2. Current bind hWND is: ", $_hwnd)

// Permanent healing

DEFINE($permanent_healing, 1)
DEFINE($healing_conter, 1)

WHILE($permanent_healing = 1)
LOGWRITE("Permanent healing cycle start")

   // Death detect   
   GETSCREEN
   IF_PICTURE_IN (0,0, 873,308, "death_danguon.bmp", -1, 100)
      LOGWRITE("Death!!!")
      GOTO(refresh)	    
   END_IF
                 
   // Using potion      
   GETSCREEN
      IF_PICTURE_IN (0,0, 902,313, "new-empty_hp--min.bmp", -1, 95)
      LOGWRITE ("Empty-hp!")
      	 WAITMS(RND(80,120))
         GETSCREEN
         IF_PICTURE_IN (0,0, 915,512, "potion_green.bmp", -1, 100)
            LOGWRITE("Potion!")   
            LCLICK($_return1+RND(10,30), $_return2+RND(1,3))
   				 WAITMS(RND(2100,2200))      
         ELSE
            LOGWRITE("potion_green.bmp not found")
            GETSCREEN
            IF_PIXEL_IN(0,0, 907,381, 9498256)
               LOGWRITE("Heal!")   
               LCLICK($_return1+RND(10,30), $_return2+RND(1,3))
               WAITMS(RND(2100,2200))
            ELSE
               LOGWRITE("listok_lotosa-min.bmp not found")
            END_IF
         END_IF        
      ELSE
         LOGWRITE("empty-half_hp--min.bmp not fond")
         INC($empty_hp_state,1)
      END_IF
	 // Body of permanent healing cycle
   GETSCREEN   
   IF_PIXEL_IN(0,0, 907,381, 9498256)
      LOGWRITE("Heal!")   
      LCLICK($_return1+RND(10,30), $_return2+RND(1,3))
      WAITMS(RND(2100,2200))
   ELSE
   // Refreshing on different state
      LOGWRITE("listok_lotosa-min.bmp not found")
      INC($healing_conter,1)
			LOGWRITE("$healing_conter is: ", $healing_conter)
			refresh:                        
      GETSCREEN
      IF_PICTURE_IN (0,0, 875,372, "refresh_dungeon.bmp", -1, 100)
         LOGWRITE("Refresh on icon!")
         LCLICK($_return1+RND(20,60), $_return2+RND(1,3))
         WAIT(4)
      ELSE
         LOGWRITE("Refresh!")				            
            GETSCREEN
            IF_PICTURE_IN (0,0, 180,81, "refresh_k-meleon.bmp", -1, 100)
               LOGWRITE("refresh in K-Meleon")
               LCLICK($_return1, $_return2)
               WAITMS(100)
               MOVE($_return1+20, $_return2+20)
               WAIT(4)
            ELSE
               LOGWRITE("refresh in Chrome (px)")
						   LCLICK(85,52)
							 WAIT(3)   
            END_IF            	 			       
      END_IF  
      
   END_IF
   IF($healing_conter > 50)
      INC($permanent_healing,1)                            
   END_IF
END_CYC
LOGWRITE("Permanent healing cycle end")

UNDEFINE($permanent_healing)
UNDEFINE($healing_conter)  

LOGWRITE("PERMANENT ITERATION - END")
HALT